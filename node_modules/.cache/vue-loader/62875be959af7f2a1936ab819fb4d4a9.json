{"remainingRequest":"C:\\Users\\Fuck samsung\\Desktop\\Projects\\2019-portfolio\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Fuck samsung\\Desktop\\Projects\\2019-portfolio\\src\\components\\MyNav.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Fuck samsung\\Desktop\\Projects\\2019-portfolio\\src\\components\\MyNav.vue","mtime":1562559853959},{"path":"C:\\Users\\Fuck samsung\\Desktop\\Projects\\2019-portfolio\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562541368690},{"path":"C:\\Users\\Fuck samsung\\Desktop\\Projects\\2019-portfolio\\node_modules\\babel-loader\\lib\\index.js","mtime":1562541368423},{"path":"C:\\Users\\Fuck samsung\\Desktop\\Projects\\2019-portfolio\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1562541368690},{"path":"C:\\Users\\Fuck samsung\\Desktop\\Projects\\2019-portfolio\\node_modules\\vue-loader\\lib\\index.js","mtime":1562541387142}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n// @ is an alias to /src\r\n\r\nexport default {\r\n  name: \"MyNav\",\r\n  components: {},\r\n  props: {\r\n    whichMenuIsActive: String,\r\n  },\r\n  data: function() {\r\n    return {\r\n      activeMenu: [true, false, false, false]\r\n    };\r\n  },\r\n  watch: {\r\n    whichMenuIsActive: function(){\r\n      let that = this;\r\n      if (that.whichMenuIsActive == \"about\") {\r\n          that.activeMenu = [false, true, false, false];\r\n      } else if (that.whichMenuIsActive == \"work\") {\r\n          that.activeMenu = [false, false, true, false];\r\n      }\r\n    }\r\n  },\r\n  async mounted() {\r\n  //from bulma documentation\r\n  // Get all \"navbar-burger\" elements\r\n  const $navbarBurgers = Array.prototype.slice.call(document.querySelectorAll('.navbar-burger'), 0);\r\n\r\n  // Check if there are any navbar burgers\r\n  if ($navbarBurgers.length > 0) {\r\n\r\n    // Add a click event on each of them\r\n    $navbarBurgers.forEach( el => {\r\n      el.addEventListener('click', () => {\r\n\r\n        // Get the target from the \"data-target\" attribute\r\n        const target = el.dataset.target;\r\n        const $target = document.getElementById(target);\r\n\r\n        // Toggle the \"is-active\" class on both the \"navbar-burger\" and the \"navbar-menu\"\r\n        el.classList.toggle('is-active');\r\n        $target.classList.toggle('is-active');\r\n\r\n      });\r\n    });\r\n  }\r\n  },\r\n  methods: {\r\n    clickHandler(evt) {\r\n      this.scrollToTop();\r\n      this.$emit(\"$menuClick\", evt.target.id);\r\n      switch (evt.target.id) {\r\n        case \"0\":\r\n          this.activeMenu = [true, false, false, false];\r\n          break;\r\n        case \"1\": {\r\n          if (this.activeMenu[1]) {\r\n            this.activeMenu = [true, false, false, false];\r\n          } else {\r\n          this.activeMenu = [false, true, false, false];\r\n          }\r\n          break;\r\n        }\r\n        case \"2\": {\r\n          if (this.activeMenu[2]) {\r\n            this.activeMenu = [true, false, false, false];\r\n          } else {\r\n          this.activeMenu = [false, false, true, false];\r\n          }\r\n          break;\r\n        }\r\n        case \"3\": {\r\n          if (this.activeMenu[3]) {\r\n            this.activeMenu = [true, false, false, false];\r\n          } else {\r\n          this.activeMenu = [false, false, false, true];\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    },\r\n    scrollToTop(){\r\n      window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: 'smooth'\r\n      });\r\n    },\r\n    homeIsActive() {\r\n      this.activeMenu = [true, false, false, false];\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["MyNav.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MyNav.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <nav class=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\r\n    <div class=\"navbar-brand\">\r\n      <a role=\"button\" class=\"navbar-burger\" data-target=\"navMenu\" aria-label=\"menu\" aria-expanded=\"false\">\r\n        <span aria-hidden=\"true\"></span>\r\n        <span aria-hidden=\"true\"></span>\r\n        <span aria-hidden=\"true\"></span>\r\n      </a>\r\n    </div>\r\n\r\n    <div id=\"navMenu\" class=\"navbar-menu\">\r\n      <div class=\"navbar-start\"></div>\r\n\r\n      <div class=\"navbar-end\">\r\n        <a\r\n          id=\"0\"\r\n          @click=\"clickHandler\"\r\n          v-bind:class=\"{isActive: activeMenu[0]}\"\r\n          class=\"navbar-item\"\r\n        >HOME</a>\r\n        <a\r\n          id=\"1\"\r\n          @click=\"clickHandler\"\r\n          v-bind:class=\"{isActive: activeMenu[1]}\"\r\n          class=\"navbar-item\"\r\n        >ABOUT ME</a>\r\n        <a\r\n          id=\"2\"\r\n          @click=\"clickHandler\"\r\n          v-bind:class=\"{isActive: activeMenu[2]}\"\r\n          class=\"navbar-item\"\r\n        >MY WORK</a>\r\n        <!-- <a\r\n          id=\"3\"\r\n          @click.prevent=\"clickHandler\"\r\n          v-bind:class=\"{isActive: activeMenu[3]}\"\r\n          class=\"navbar-item\"\r\n        >CONTACT</a> -->\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\n\r\nexport default {\r\n  name: \"MyNav\",\r\n  components: {},\r\n  props: {\r\n    whichMenuIsActive: String,\r\n  },\r\n  data: function() {\r\n    return {\r\n      activeMenu: [true, false, false, false]\r\n    };\r\n  },\r\n  watch: {\r\n    whichMenuIsActive: function(){\r\n      let that = this;\r\n      if (that.whichMenuIsActive == \"about\") {\r\n          that.activeMenu = [false, true, false, false];\r\n      } else if (that.whichMenuIsActive == \"work\") {\r\n          that.activeMenu = [false, false, true, false];\r\n      }\r\n    }\r\n  },\r\n  async mounted() {\r\n  //from bulma documentation\r\n  // Get all \"navbar-burger\" elements\r\n  const $navbarBurgers = Array.prototype.slice.call(document.querySelectorAll('.navbar-burger'), 0);\r\n\r\n  // Check if there are any navbar burgers\r\n  if ($navbarBurgers.length > 0) {\r\n\r\n    // Add a click event on each of them\r\n    $navbarBurgers.forEach( el => {\r\n      el.addEventListener('click', () => {\r\n\r\n        // Get the target from the \"data-target\" attribute\r\n        const target = el.dataset.target;\r\n        const $target = document.getElementById(target);\r\n\r\n        // Toggle the \"is-active\" class on both the \"navbar-burger\" and the \"navbar-menu\"\r\n        el.classList.toggle('is-active');\r\n        $target.classList.toggle('is-active');\r\n\r\n      });\r\n    });\r\n  }\r\n  },\r\n  methods: {\r\n    clickHandler(evt) {\r\n      this.scrollToTop();\r\n      this.$emit(\"$menuClick\", evt.target.id);\r\n      switch (evt.target.id) {\r\n        case \"0\":\r\n          this.activeMenu = [true, false, false, false];\r\n          break;\r\n        case \"1\": {\r\n          if (this.activeMenu[1]) {\r\n            this.activeMenu = [true, false, false, false];\r\n          } else {\r\n          this.activeMenu = [false, true, false, false];\r\n          }\r\n          break;\r\n        }\r\n        case \"2\": {\r\n          if (this.activeMenu[2]) {\r\n            this.activeMenu = [true, false, false, false];\r\n          } else {\r\n          this.activeMenu = [false, false, true, false];\r\n          }\r\n          break;\r\n        }\r\n        case \"3\": {\r\n          if (this.activeMenu[3]) {\r\n            this.activeMenu = [true, false, false, false];\r\n          } else {\r\n          this.activeMenu = [false, false, false, true];\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    },\r\n    scrollToTop(){\r\n      window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: 'smooth'\r\n      });\r\n    },\r\n    homeIsActive() {\r\n      this.activeMenu = [true, false, false, false];\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"@/assets/scss/settings.scss\";\r\n\r\na {\r\n  outline: none;\r\n}\r\n\r\n.navbar {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  background: transparent;\r\n}\r\n\r\n.navbar-menu.is-active {\r\n    display: inherit;\r\n    position: absolute;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    background: transparent;\r\n    box-shadow: none;\r\n    margin: 0 auto;\r\n    padding: 0;\r\n    @include mq ('phone') {\r\n      background-color: #fff;\r\n      box-shadow: 0 8px 16px rgba(10,10,10,.1);\r\n      padding: .5rem 0;\r\n      height: 100vh;\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100vw;\r\n    }\r\n  }\r\n\r\n@media screen and (min-width: 400px) {\r\n  .navbar-burger {\r\n    display: none;\r\n  }\r\n  .navbar-end {\r\n    display: flex;\r\n  }\r\n  .navbar-menu {\r\n    display: inherit;\r\n    position: absolute;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    background: transparent;\r\n    box-shadow: none;\r\n    margin: 0 auto;\r\n    padding: 0;\r\n  }\r\n}\r\n.navbar-item {\r\n  font-weight: 700;\r\n  color: $white;\r\n  font-size: 14px;\r\n  margin: 50px 0 0 50px;\r\n  &:hover {\r\n    color: $primary-colour;\r\n    background: transparent;\r\n  }\r\n}\r\n.navbar-item.isActive {\r\n  color: $primary-colour;\r\n}\r\n\r\n.navbar-end {\r\n  margin-right: 50px;\r\n  justify-content: center;\r\n}\r\n.navbar-burger {\r\n  margin-right: 15px;\r\n  color: $white;\r\n  transition: all .5s ease;\r\n  z-index: 5;\r\n  &.is-active {\r\n    color: $primary-colour;\r\n  }\r\n  &:hover {\r\n    transform: rotate(180deg);\r\n    transition: all 0.5s ease;\r\n    background-color: transparent;\r\n  }\r\n}\r\n\r\n</style>\r\n\r\n"]}]}