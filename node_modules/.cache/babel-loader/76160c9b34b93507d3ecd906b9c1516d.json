{"remainingRequest":"C:\\Users\\gSarG\\Desktop\\Projects\\2019-portfolio\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\gSarG\\Desktop\\Projects\\2019-portfolio\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\gSarG\\Desktop\\Projects\\2019-portfolio\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\gSarG\\Desktop\\Projects\\2019-portfolio\\src\\views\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\gSarG\\Desktop\\Projects\\2019-portfolio\\src\\views\\Home.vue","mtime":1562112844748},{"path":"C:\\Users\\gSarG\\Desktop\\Projects\\2019-portfolio\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\gSarG\\Desktop\\Projects\\2019-portfolio\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\gSarG\\Desktop\\Projects\\2019-portfolio\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\gSarG\\Desktop\\Projects\\2019-portfolio\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// @ is an alias to /src\nimport particlesConfig from \"@/assets/particlesjs-config.json\";\nimport Hero from \"@/components/Hero.vue\";\nimport Work from \"@/components/Work.vue\";\nimport MyNav from \"@/components/MyNav.vue\";\nimport About from \"@/components/About.vue\";\nimport CloseButton from \"@/components/CloseButton.vue\";\nexport default {\n  name: \"home\",\n  components: {\n    Hero: Hero,\n    Work: Work,\n    MyNav: MyNav,\n    About: About,\n    CloseButton: CloseButton\n  },\n  data: function data() {\n    return {\n      activeSections: [false, false] // aboutIsActive: true,\n      // contactIsActive: false,\n      // workIsActive: false\n\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    require(\"particles.js\");\n\n    this.$nextTick(function () {\n      _this.initParticlesJS();\n    });\n  },\n  methods: {\n    initParticlesJS: function initParticlesJS() {\n      /* eslint-disable */\n      particlesJS(\"particles-js\", particlesConfig);\n    },\n    //checks to see if any of the states are active.\n    //Returns true if any states are currently active.\n    checkForActiveState: function checkForActiveState(array) {\n      for (var i = 0; i < array.length; i++) {\n        if (array[i]) {\n          return true;\n        }\n      }\n    },\n    //deals with active states for components from nav click\n    clickHandler: function clickHandler(id) {\n      var that = this;\n\n      switch (id) {\n        case \"0\":\n          this.activeSections = [false, false];\n          break;\n\n        case \"1\":\n          //if the clicked section is already active, minimise it\n          if (that.activeSections[0]) {\n            that.activeSections = [false, false]; //else check if any state is active, if true, remove active\n            //set timeout for remove period, activate new state\n          } else if (that.checkForActiveState(that.activeSections)) {\n            that.activeSections = [false, false];\n            setTimeout(function () {\n              that.activeSections = [true, false];\n            }, 500); //else if no state is active, active clicked state\n          } else {\n            that.activeSections = [true, false];\n          }\n\n          break;\n\n        case \"2\":\n          if (that.activeSections[1]) {\n            that.activeSections = [false, false];\n          } else if (that.checkForActiveState(that.activeSections)) {\n            that.activeSections = [false, false];\n            setTimeout(function () {\n              that.activeSections = [false, true];\n            }, 500);\n          } else {\n            that.activeSections = [false, true];\n          }\n\n          break;\n      }\n    },\n    closeSections: function closeSections() {\n      // this.activeSections = [false, false];\n      this.clickHandler(\"0\");\n    }\n  }\n};",{"version":3,"sources":["Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"portfolio\">\r\n    <div class=\"content\">\r\n      <CloseButton @$closeSections=\"closeSections\"/>\r\n      <About :aboutActive=\"activeSections[0]\"/>\r\n      <Work :workActive=\"activeSections[1]\"/>\r\n    </div>\r\n    <div class=\"particles-bg\">\r\n      <div id=\"particles-js\" class=\"hero-particles\"></div>\r\n      <MyNav @$menuClick=\"clickHandler\"/>\r\n      <Hero/>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\nimport particlesConfig from \"@/assets/particlesjs-config.json\";\r\nimport Hero from \"@/components/Hero.vue\";\r\nimport Work from \"@/components/Work.vue\";\r\nimport MyNav from \"@/components/MyNav.vue\";\r\nimport About from \"@/components/About.vue\";\r\nimport CloseButton from \"@/components/CloseButton.vue\";\r\n\r\nexport default {\r\n  name: \"home\",\r\n  components: {\r\n    Hero,\r\n    Work,\r\n    MyNav,\r\n    About,\r\n    CloseButton\r\n  },\r\n  data: function() {\r\n    return {\r\n      activeSections: [false, false]\r\n      // aboutIsActive: true,\r\n      // contactIsActive: false,\r\n      // workIsActive: false\r\n    };\r\n  },\r\n  mounted() {\r\n    require(\"particles.js\");\r\n    this.$nextTick(() => {\r\n      this.initParticlesJS();\r\n    });\r\n  },\r\n  methods: {\r\n    initParticlesJS() {\r\n      /* eslint-disable */\r\n      particlesJS(\"particles-js\", particlesConfig);\r\n    },\r\n    //checks to see if any of the states are active.\r\n    //Returns true if any states are currently active.\r\n    checkForActiveState(array) {\r\n      for (let i = 0; i < array.length; i++) {\r\n        if (array[i]) {\r\n          return true;\r\n        }\r\n      }\r\n    },\r\n    //deals with active states for components from nav click\r\n    clickHandler(id) {\r\n      let that = this;\r\n      switch (id) {\r\n        case \"0\":\r\n          this.activeSections = [false, false];\r\n          break;\r\n        case \"1\":\r\n          //if the clicked section is already active, minimise it\r\n          if (that.activeSections[0]) {\r\n            that.activeSections = [false, false];\r\n            //else check if any state is active, if true, remove active\r\n            //set timeout for remove period, activate new state\r\n          } else if (that.checkForActiveState(that.activeSections)) {\r\n            that.activeSections = [false, false];\r\n            setTimeout(function() {\r\n              that.activeSections = [true, false];\r\n            }, 500);\r\n            //else if no state is active, active clicked state\r\n          } else {\r\n            that.activeSections = [true, false];\r\n          }\r\n          break;\r\n        case \"2\":\r\n          if (that.activeSections[1]) {\r\n            that.activeSections = [false, false];\r\n          } else if (that.checkForActiveState(that.activeSections)) {\r\n            that.activeSections = [false, false];\r\n            setTimeout(function() {\r\n              that.activeSections = [false, true];\r\n            }, 500);\r\n          } else {\r\n            that.activeSections = [false, true];\r\n          }\r\n          break;\r\n      }\r\n    },\r\n    closeSections(){\r\n      // this.activeSections = [false, false];\r\n      this.clickHandler(\"0\");\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../assets/scss/settings.scss\";\r\n\r\n.content {\r\n  margin: 0;\r\n}\r\n\r\n.particles-bg {\r\n  // display: flex;\r\n  // flex-direction: column;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100vh;\r\n  font-family: \"Raleway\", sans-serif;\r\n  z-index: 6;\r\n  // overflow: scroll;\r\n}\r\n.hero-particles {\r\n  height: 100vh;\r\n  width: 100%;\r\n  background: $grey;\r\n  color: #fff;\r\n  // position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  // z-index: 4;\r\n}\r\n\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition: opacity 0.4s ease-in-out, transform 1.5s ease-in-out;\r\n}\r\n.fade-enter,\r\n.fade-leave-to {\r\n  opacity: 0;\r\n}\r\n</style>\r\n\r\n"],"sourceRoot":"src/views"}]}